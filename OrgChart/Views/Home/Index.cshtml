@using Microsoft.WindowsAzure.ActiveDirectory.GraphHelper;

@{
    ViewBag.Title = "Home Page";
}

@section featured {
    <section class="featured">
        <div class="content-wrapper">
            <hgroup class="title">
                <h1>@ViewBag.Title.</h1>
                <h2>@ViewBag.Message</h2>
            </hgroup>
            <p>
                Queries TBD
            </p>
        </div>
    </section>
}

<table id="Splitter"><tr>
<td>
<table id="ManagerList">
	<tr>
		<th>displayName (mailNickname)<br />jobTitle</th>
    </tr>
@for (int i = 0; i < ViewBag.ancestorsAndMainPerson.Count-1; i++)
{
	<tr class="highlightable">
		<td style="display:none">@ViewBag.ancestorsAndMainPerson[i].mailNickname</td>
        <td><a href="/?upn=@ViewBag.ancestorsAndMainPerson[i].userPrincipalName">@ViewBag.ancestorsAndMainPerson[i].displayName</a> (@ViewBag.ancestorsAndMainPerson[i].mailNickname)<br />@ViewBag.ancestorsAndMainPerson[i].jobTitle</td>
	</tr>
}
</table>

<table id="MainPerson">
	<tr class="highlightable">
		<td style="display:none">@ViewBag.ancestorsAndMainPerson[ViewBag.ancestorsAndMainPerson.Count-1].mailNickname</td>
		<td><a href="/?upn=@ViewBag.ancestorsAndMainPerson[ViewBag.ancestorsAndMainPerson.Count-1].userPrincipalName">@ViewBag.ancestorsAndMainPerson[ViewBag.ancestorsAndMainPerson.Count-1].displayName</a> (@ViewBag.ancestorsAndMainPerson[ViewBag.ancestorsAndMainPerson.Count-1].mailNickname)<br />@ViewBag.ancestorsAndMainPerson[ViewBag.ancestorsAndMainPerson.Count-1].jobTitle</td>
	</tr>
</table>

<table id="OrgColumns">
	<tr>
@foreach (List<AadUser> directList in ViewBag.directsOfDirects)
{
    <td>
        <table>
            @foreach (AadUser user in directList)
            {
                <tr class="highlightable">
            		<td style="display:none">@user.mailNickname</td>
            		<td><a href="/?upn=@user.userPrincipalName">@user.displayName</a> (@user.mailNickname)<br />@user.jobTitle</td>
                </tr>
            }
        </table>
    </td>
}
</table>
</td>
<td>
	<form id="MainForm" action="/" method="post">
        <fieldset> <legend>Update/Delete A User</legend>
			<div><label for="updateUPN"><pre>UPN: </pre></label> <input type="text" id="updateUPN" name="updateUPN"></div>
			<div><label for="updateDisplayName"><pre>displayName: </pre></label> <input type="text" id="updateDisplayName" name="updateDisplayName"></div>
			<div><label for="updateManagerUPN"><pre>manager: </pre></label> <input type="text" id="updateManagerUPN" name="updateManagerUPN"></div>
			<div><label for="updateTrio"><pre>Trio: </pre></label> <input type="text" id="updateTrio" name="updateTrio"></div>
			<div><label for="updateLinkedInURL"><pre>LinkedIn URL: </pre></label> <input type="text" id="updateLinkedInURL" name="updateLinkedInURL"></div>
		    <button type="submit" id="submitUpdate" name="submitButton" value="Update">Update</button>
		    <button type="submit" id="submitDelete" name="submitButton" value="Delete">Delete</button>
		</fieldset>
		<fieldset> <legend>Create A User</legend>
			<div><label for="createUPN"><pre>UPN: </pre></label> <input type="text" id="createUPN" name="createUPN"></div>
			<div><label for="createMailNickname"><pre>mailNickname: </pre></label> <input type="text" id="createMailNickname" name="createMailNickname"></div>
			<div><label for="createDisplayName"><pre>displayName: </pre></label> <input type="text" id="createDisplayName" name="createDisplayName"></div>
			<div><label for="createManagerUPN"><pre>manager: </pre></label> <input type="text" id="createManagerUPN" name="createManagerUPN"></div>
    		<button type="submit" id="submitCreate" name="submitButton" value="Create">Create</button>
        </fieldset>
	</form>
</td>

</tr></table>

<script type="text/javascript">
    var userMap = {
        @{
            string strMessage = "";
            AadUser previousUser = null; 
            for (int i = 0; i < ViewBag.ancestorsAndMainPerson.Count; i++)
            {
                if (strMessage != "") { strMessage += ","; }
                strMessage += ViewBag.ancestorsAndMainPerson[i].mailNickname;
                strMessage += ": { displayName: \"";
                strMessage += ViewBag.ancestorsAndMainPerson[i].displayName;
                strMessage += "\", userPrincipalName: \"";
                strMessage += ViewBag.ancestorsAndMainPerson[i].userPrincipalName;
                strMessage += "\", managerPrincipalName: \"";
                if (previousUser != null)
                {
                    strMessage += previousUser.userPrincipalName;                    
                }
                else
                {
                    strMessage += "NO MANAGER";
                }
                strMessage += "\"}";
                previousUser = ViewBag.ancestorsAndMainPerson[i];
            }
            foreach (List<AadUser> directList in ViewBag.directsOfDirects)
            {
                AadUser thisManager = null;
                foreach (AadUser user in directList)
                {
                    string strManagerPrincipalName;
                    if (thisManager == null) 
                    {
                        thisManager = user;
                        strManagerPrincipalName = previousUser.userPrincipalName;
                    }
                    else
                    {
                        strManagerPrincipalName = thisManager.userPrincipalName;
                    }
                    if (strMessage != "") { strMessage += ","; }
                    strMessage += user.mailNickname;
                    strMessage += ": { displayName: \"";
                    strMessage += user.displayName;
                    strMessage += "\", userPrincipalName: \"";
                    strMessage += user.userPrincipalName;
                    strMessage += "\", managerPrincipalName: \"";
                    strMessage += strManagerPrincipalName;
                    strMessage += "\"}";
                }
            }
        }
        @MvcHtmlString.Create(strMessage)
    };
    function hoverOn(eventObject) {
        var $td = $("td:first", this);
        var alias = $td[0].textContent;
        var mainFormAction = "/?upn=";
        mainFormAction += userMap[alias].userPrincipalName;
        $("#MainForm").attr("action", mainFormAction);
        $("#updateUPN").val(userMap[alias].userPrincipalName);
        $("#updateDisplayName").val(userMap[alias].displayName);
        $("#updateManagerUPN").val(userMap[alias].managerPrincipalName);
        $("#createManagerUPN").val(userMap[alias].userPrincipalName);
    }
    function hoverOut(eventObject) {
        //leave text in input fields on losing focus
    }
    function setHoverActions() {
        $("tr.highlightable").hover(hoverOn, hoverOut);
    }
    function setInputChange() {
        $("#updateUPN").on("input", function () {
            var mainFormAction = "/?upn=";
            mainFormAction += this.value;
            $("#MainForm").attr("action", mainFormAction);
        });
    }
    window.document.body.onload = function () {
        setHoverActions();
        setInputChange();
    }
</script>