@using Microsoft.WindowsAzure.ActiveDirectory.GraphHelper;
@using OrgChart.Models;

@{
    ViewBag.Title = "Home Page";
}

@section featured {
    <section class="featured">
        <div class="content-wrapper">
            <hgroup class="title">
                <h1>@ViewBag.Title</h1>
                <h2>@ViewBag.Message</h2>
            </hgroup>
            <p>
                Queries TBD
            </p>
        </div>
    </section>
}

@if(ViewBag.ancestorsAndMainPerson != null)
{
<table id="Splitter"><tr>
<td>
<table id="ManagerList">
	<tr>
		<th></th>
        <th>displayName (mailNickname)<br />jobTitle</th>
    </tr>
@for (int i = 0; i < ViewBag.ancestorsAndMainPerson.Count-1; i++)
{
	<tr class="highlightable">
    @foreach(AadExtendedUser extendedUser in ViewBag.ancestorsAndMainPerson[i])
    {
		<td style="display:none">@extendedUser.mailNickname</td>
        <td class="tdPersonDescription">
            <img style="MAX-WIDTH: 32px; VERTICAL-ALIGN: bottom; MARGIN: 1px 4px 0px 0px; MAX-HEIGHT: 24px" 
                 src=@(String.Format("{0}{1}{2}", "http://who/photos/", @extendedUser.mailNickname, ".jpg")) 
                 alt="@extendedUser.mailNickname"/>
        </td>
        <td class="tdPersonDescription">
            <a href="/?upn=@extendedUser.userPrincipalName">@extendedUser.displayName</a> 
            (@extendedUser.mailNickname)<br />
            @extendedUser.jobTitle
        </td>
    }
	</tr>
}
</table>

<table id="MainPerson">
	<tr class="highlightable">
    @foreach(AadExtendedUser extendedUser in ViewBag.ancestorsAndMainPerson[ViewBag.ancestorsAndMainPerson.Count-1])
    {
		<td style="display:none">@extendedUser.mailNickname</td>
		<td class="tdPersonImage">
            <img style="MAX-WIDTH: 110px; VERTICAL-ALIGN: bottom; MARGIN: 8px 10px 8px 10px; MAX-HEIGHT: 100px" 
			     src=@(String.Format("{0}{1}{2}", "http://who/photos/", @extendedUser.mailNickname, ".jpg")) 
			     alt="@extendedUser.mailNickname"/>
		</td>
		<td class="tdPersonDescription">
            <a href="/?upn=@extendedUser.userPrincipalName">
                @extendedUser.displayName
            </a> 
            (@extendedUser.mailNickname)<br />
            @extendedUser.jobTitle
		</td>
    }
	</tr>
</table>

<table id="OrgColumns">
<tr>
@{
    int nextRowStart = 0;
    int count = ViewBag.directsOfDirects.Count;
    for (int j = 0; j < ViewBag.directsOfDirects.Count; j++)
    {
        List<AadExtendedUser> directList = ViewBag.directsOfDirects[j];
        // at each row start, read ahead to fill in trio row if necessary and determine next row start
        if (j == nextRowStart)
        {
            // insert a row break if we are at the natural start of a new row
            if (j != 0)
            {
                @:</tr><tr>
            }
            // read ahead 9+1 directs to determine width and number of spanning trio columns to add
            String previousTrio = null;
            String previousUPN = null;
            int colspan = 1;
            for (int k = j; k < count; k++)
            {
                // if we have now processed one more direct report than we want on a row, break out
                if ((k - j) > 9)
                {
                    break;
                }
                List<AadExtendedUser> dirList = ViewBag.directsOfDirects[k];
                String newTrio = dirList[0].trioLed;
                String newUPN = dirList[0].userPrincipalName;
                if (previousTrio == null)
                {
                    // first pass, initialize previous trio
                    previousTrio = newTrio;
                    previousUPN = newUPN;
                }
                else if (newTrio == previousTrio)
                {
                    // encountered repeat trio, increment colspan and add to UPN value
                    colspan++;
                    previousUPN += ",";
                    previousUPN += newUPN;
                    // allow row to extend to end of terminating sequence of non-trio leaders
                    if (newTrio == "" && ((k - j) >= 9 || k == (count-1)))
                    {
                        nextRowStart = k;
                        break;                        
                    }
                }
                if (newTrio != previousTrio || (k == (count - 1) && (k - j) < 9))
                {                        
                    // trio terminated by new trio or end of list (without exceeding max row length)
                    if (previousTrio != "")
                    {
                        <td class="tdTrio" colspan ="@(colspan)">
                        <a class="tdTrio" href="/?upn=@previousUPN&trio=true">@previousTrio</a>
                        </td>
                    }
                    // reset if terminated by new trio
                    if(newTrio != previousTrio)
                    {
                        // reset colspan
                        colspan = 1;
                        // next row starts here unless next trio completes before row termination
                        nextRowStart = k;
                        // store new trio
                        previousTrio = newTrio;
                        previousUPN = newUPN;
                    }
                }
            }
            // insert a row break to close out spanning header column
            @:</tr><tr>
        }
        <td>
            <table>
                @foreach (AadExtendedUser user in directList)
                {
                    <tr class="highlightable">
            		    <td style="display:none">@user.mailNickname</td>
                        <td class="tdPersonImage">
                            <img style="MAX-WIDTH: 50px; VERTICAL-ALIGN: bottom; MARGIN: 4px 4px 4px 4px; MAX-HEIGHT: 52px" 
                                 src=@(String.Format("{0}{1}{2}", "http://who/photos/", @user.mailNickname, ".jpg")) 
                                 alt="@user.mailNickname"/>
                        </td>
            		    <td class = @(user.isManager ? "tdManagerDescription" : "tdPersonDescription")>
                            <a href="/?upn=@user.userPrincipalName">@user.displayName</a> (@user.mailNickname)<br />@user.jobTitle
            		    </td>
                    </tr>
                }
            </table>
        </td>
    }
}
</tr>
</table>
</td>
<td class="tdFormBackground">
	<form id="MainForm" action="/" method="post">
        <fieldset> <legend>Update/Delete A User</legend>
			<div><label for="updateUPN"><pre>UPN: </pre></label> <input type="text" id="updateUPN" name="updateUPN"></div>
			<div><label for="updateDisplayName"><pre>displayName: </pre></label> <input type="text" id="updateDisplayName" name="updateDisplayName"></div>
			<div><label for="updateManagerUPN"><pre>manager: </pre></label> <input type="text" id="updateManagerUPN" name="updateManagerUPN"></div>
			<div><label for="updateJobTitle"><pre>title: </pre></label> <input type="text" id="updateJobTitle" name="updateJobTitle"></div>
			<div><label for="updateTrioLed"><pre>Trio: </pre></label> <input type="text" id="updateTrioLed" name="updateTrioLed"></div>
			<div><label for="updateLinkedInUrl"><pre>LinkedIn URL: </pre></label> <input type="text" id="updateLinkedInUrl" name="updateLinkedInUrl"></div>
		    <button type="submit" id="submitUpdate" name="submitButton" value="Update">Update</button>
		    <button type="submit" id="submitDelete" name="submitButton" value="Delete">Delete</button>
		</fieldset>
		<fieldset> <legend>Create A User</legend>
			<div><label for="createUPN"><pre>UPN: </pre></label> <input type="text" id="createUPN" name="createUPN"></div>
			<div><label for="createMailNickname"><pre>mailNickname: </pre></label> <input type="text" id="createMailNickname" name="createMailNickname"></div>
			<div><label for="createDisplayName"><pre>displayName: </pre></label> <input type="text" id="createDisplayName" name="createDisplayName"></div>
			<div><label for="createManagerUPN"><pre>manager: </pre></label> <input type="text" id="createManagerUPN" name="createManagerUPN"></div>
			<div><label for="createJobTitle"><pre>title: </pre></label> <input type="text" id="createJobTitle" name="createJobTitle"></div>
    		<button type="submit" id="submitCreate" name="submitButton" value="Create">Create</button>
        </fieldset>
	</form>
</td>
</tr></table>
<script type="text/javascript">
    var userMap = {
        @{
            string strMap = "";
            AadExtendedUser previousUser = null;
            for (int i = 0; i < ViewBag.ancestorsAndMainPerson.Count; i++)
            {
                    foreach (AadExtendedUser extendedUser in ViewBag.ancestorsAndMainPerson[i])
                    {
                        if (strMap != "") { strMap += ","; }
                        strMap += extendedUser.mailNickname;
                        strMap += ": { displayName: \"";
                        strMap += extendedUser.displayName;
                        strMap += "\", userPrincipalName: \"";
                        strMap += extendedUser.userPrincipalName;
                        strMap += "\", managerPrincipalName: \"";
                        if (previousUser != null)
                        {
                            strMap += previousUser.userPrincipalName;
                        }
                        else
                        {
                            strMap += "NO MANAGER";
                        }
                        strMap += "\", jobTitle: \"";
                        strMap += extendedUser.jobTitle;
                        strMap += "\", trioLed: \"";
                        strMap += extendedUser.trioLed;
                        strMap += "\", linkedInUrl: \"";
                        strMap += extendedUser.linkedInUrl;
                        strMap += "\"}";
                        previousUser = extendedUser;
                    }
            }
            foreach (List<AadExtendedUser> directList in ViewBag.directsOfDirects)
            {
                AadExtendedUser thisManager = null;
                foreach (AadExtendedUser user in directList)
                {
                    string strManagerPrincipalName;
                    if (thisManager == null)
                    {
                        thisManager = user;
                        strManagerPrincipalName = previousUser.userPrincipalName;
                    }
                    else
                    {
                        strManagerPrincipalName = thisManager.userPrincipalName;
                    }
                    if (strMap != "") { strMap += ","; }
                    strMap += user.mailNickname;
                    strMap += ": { displayName: \"";
                    strMap += user.displayName;
                    strMap += "\", userPrincipalName: \"";
                    strMap += user.userPrincipalName;
                    strMap += "\", managerPrincipalName: \"";
                    strMap += strManagerPrincipalName;
                    strMap += "\", jobTitle: \"";
                    strMap += user.jobTitle;
                    strMap += "\", trioLed: \"";
                    strMap += user.trioLed;
                    strMap += "\", linkedInUrl: \"";
                    strMap += user.linkedInUrl;
                    strMap += "\"}";
                }
            }
        }
        @MvcHtmlString.Create(strMap)
    };
    function hoverOn(eventObject) {
        var $td = $("td:first", this);
        var alias = $td[0].textContent;
        var mainFormAction = "/?upn=";
        mainFormAction += userMap[alias].managerPrincipalName;
        $("#MainForm").attr("action", mainFormAction);
        $("#updateUPN").val(userMap[alias].userPrincipalName);
        $("#updateDisplayName").val(userMap[alias].displayName);
        $("#updateManagerUPN").val(userMap[alias].managerPrincipalName);
        $("#updateJobTitle").val(userMap[alias].jobTitle);
        $("#updateTrioLed").val(userMap[alias].trioLed);
        $("#updateLinkedInUrl").val(userMap[alias].linkedInUrl);
        $("#createManagerUPN").val(userMap[alias].userPrincipalName);
    }
    function hoverOut(eventObject) {
        //leave text in input fields on losing focus
    }
    function setHoverActions() {
        $("tr.highlightable").hover(hoverOn, hoverOut);
    }
    function setInputChange() {
        $("#updateUPN, #createUPN").each(function () {
            $(this).on("input", function () {
                var mainFormAction = "/?upn=";
                mainFormAction += this.value;
                $("#MainForm").attr("action", mainFormAction);
            });
        });
    }
    window.document.body.onload = function () {
        setHoverActions();
        setInputChange();
    }
</script>
}